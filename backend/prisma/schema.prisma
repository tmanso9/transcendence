generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Connections {
  id       String           @id @default(uuid())
  status   ConnectionStatus @default(PENDING)
  creator  String
  receiver String
}

model User {
  id         String     @id @default(uuid())
  createdAt  DateTime   @default(now())
  editedAt   DateTime   @updatedAt
  email      String     @unique
  password   String
  username   String     @unique
  status     Status
  avatar     String
  points     Int        @default(0)
  wins       Int        @default(0)
  losses     Int        @default(0)
  adminOf    Channels[] @relation("Admins")
  bannedFrom Channels[] @relation("Banned")
  User_A     User[]     @relation("Friends")
  User_B     User[]     @relation("Friends")
  channels   Channels[] @relation("Members")
  mutedOn    Channels[] @relation("Muted")
}

model Blacklist {
  id        Int      @id @default(autoincrement())
  token     String
  sub       String
  email     String
  expiresIn Int
  createdAt DateTime @default(now())
}

model Gamestats {
  id String @id @default(uuid())
}

model Channels {
  id          String @id @default(uuid())
  creator     String
  password    String @default("")
  channelName String
  messages    Json[]
  admins      User[] @relation("Admins")
  bannedUsers User[] @relation("Banned")
  members     User[] @relation("Members")
  mutedUsers  User[] @relation("Muted")
}

enum Status {
  OFFLINE
  ONLINE
  IN_GAME
}

enum ConnectionStatus {
  PENDING
  ACCEPTED
}

enum ChannelType {
  PERSONAL
  PRIVATE
  PUBLIC
}
